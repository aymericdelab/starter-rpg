{"version":3,"sources":["../src/starknet.ts","../src/devnet.ts"],"sourcesContent":["import { Chain } from \"./types\";\n\n// Starknet chain ids are generated as follows:\n//\n// 1. Take the name of the network as string (SN_MAIN, SN_GOERLI, SN_GOERLI2).\n// 2. Encode it as Starknet short string.\n//\n// For example, `encodeShortString('SN_MAIN')` returns `0x535f4d41494e`, which\n// is the chain id.\n\nexport const mainnet = {\n  id: BigInt(\"0x534e5f4d41494e\"),\n  network: \"mainnet\",\n  name: \"Starknet\",\n  nativeCurrency: {\n    address:\n      \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\",\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n  },\n\n  rpcUrls: {\n    alchemy: {\n      http: [\"https://starknet-mainnet.g.alchemy.com/v2\"],\n    },\n    blast: {\n      http: [\"https://starknet-mainnet.blastapi.io\"],\n    },\n    infura: {\n      http: [\"https://starknet-mainnet.infura.io/v3\"],\n    },\n    lava: {\n      http: [\"https://g.w.lavanet.xyz:443/gateway/strk/rpc-http\"],\n    },\n    nethermind: {\n      http: [\"https://rpc.nethermind.io/mainnet-juno\"],\n    },\n    reddio: {\n      http: [\"https://starknet-mainnet.reddio.com\"],\n    },\n    default: {\n      http: [],\n    },\n    public: {\n      http: [\n        \"https://starknet-mainnet.public.blastapi.io/rpc/v0.5\",\n        \"https://rpc.starknet.lava.build\",\n        \"https://free-rpc.nethermind.io/mainnet-juno/v0_5\",\n      ],\n    },\n  },\n  explorers: {\n    starkCompass: [\"https://www.starkcompass.com\"],\n    starkscan: [\"https://starkscan.co\"],\n    viewblock: [\"https://viewblock.io/starknet\"],\n    voyager: [\"https://voyager.online\"],\n  },\n} as const satisfies Chain;\n\nexport const goerli = {\n  id: BigInt(\"0x534e5f474f45524c49\"),\n  network: \"goerli\",\n  name: \"Starknet Goerli Testnet\",\n  nativeCurrency: {\n    address:\n      \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\",\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n  },\n  testnet: true,\n  rpcUrls: {\n    alchemy: {\n      http: [\"https://starknet-goerli.g.alchemy.com/v2\"],\n    },\n    blast: {\n      http: [\"https://starknet-testnet.blastapi.io\"],\n    },\n    infura: {\n      http: [\"https://starknet-goerli.infura.io/v3\"],\n    },\n    lava: {\n      http: [\"https://g.w.lavanet.xyz:443/gateway/strkt/rpc-http\"],\n    },\n    nethermind: {\n      http: [\"https://rpc.nethermind.io/goerli-juno\"],\n    },\n    reddio: {\n      http: [\"https://starknet-goerli.reddio.com\"],\n    },\n    default: {\n      http: [],\n    },\n    public: {\n      http: [\n        \"https://starknet-testnet.public.blastapi.io/rpc/v0.5\",\n        \"https://rpc.starknet-testnet.lava.build\",\n        \"https://free-rpc.nethermind.io/goerli-juno/v0_5\",\n      ],\n    },\n  },\n  explorers: {\n    starkCompass: [\"https://www.starkcompass.com/testnet\"],\n    starkscan: [\"https://testnet.starkscan.co\"],\n    voyager: [\"https://goerli.voyager.online\"],\n    viewblock: [\"https://viewblock.io/starknet\"],\n  },\n} as const satisfies Chain;\n\nexport const sepolia = {\n  id: BigInt(\"0x534e5f5345504f4c4941\"),\n  network: \"sepolia\",\n  name: \"Starknet Sepolia Testnet\",\n  nativeCurrency: {\n    address:\n      \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\",\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n  },\n  testnet: true,\n  rpcUrls: {\n    // alchemy: {\n    //   http: [],\n    // },\n    blast: {\n      http: [\"https://starknet-sepolia.blastapi.io\"],\n    },\n    infura: {\n      http: [\"https://starknet-sepolia.infura.io/v3\"],\n    },\n    // lava: {\n    //   http: [],\n    // },\n    nethermind: {\n      http: [\"https://rpc.nethermind.io/sepolia-juno\"],\n    },\n    reddio: {\n      http: [\"https://starknet-sepolia.reddio.com\"],\n    },\n    default: {\n      http: [],\n    },\n    public: {\n      http: [\n        \"https://starknet-sepolia.public.blastapi.io\",\n        \"https://free-rpc.nethermind.io/sepolia-juno\",\n      ],\n    },\n  },\n  explorers: {\n    starkscan: [\"https://sepolia.starkscan.co\"],\n    voyager: [\"https://sepolia.voyager.online\"],\n  },\n} as const satisfies Chain;\n","import { Chain } from \"./types\";\n\nexport const devnet = {\n  id: BigInt(\"0x534e5f474f45524c49\"),\n  network: \"devnet\",\n  name: \"Starknet Devnet\",\n  nativeCurrency: {\n    address:\n      \"0x049d36570d4e46f48e99674bd3fcc84644ddd6b96f7c741b1562b82f9e004dc7\",\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n  },\n  testnet: true,\n  rpcUrls: {\n    default: {\n      http: [],\n    },\n    public: {\n      http: [\"http://localhost:5050/rpc\"],\n    },\n  },\n} as const satisfies Chain;\n"],"mappings":"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","names":[]}